name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["23.9.0"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint

      - name: Run Type Check
        run: npm run type-check

      - name: Run Tests
        run: npm test

      - name: Build Application
        run: npm run build

      # Export the application as static HTML (this uses the "output: export" setting)
      - name: Export Application
        run: npx next export

      # Debug: List directory contents to verify that "out" folder exists
      - name: List Directory Contents
        run: ls -la

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23.9.0"

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build

      - name: Deploy Application
        run: npm run deploy
